(function(){var Autocompletionist;Autocompletionist=function(selector,options){var self=this;self.options=options||{};self.$selector=$(selector);self.findMatches=function(term){term=(term||"").toLowerCase();self.matches=[];self.numberOfMatches=0;self.keys.forEach(function(key){if(key.toLowerCase().indexOf(term)>=0){self.matches.push(key);self.numberOfMatches+=1}});return self.matches};self.initialize=function(){self.keys=self.options.keys||[];self.matches=[];self.numberOfMatches=0};self.initialize()};if(!window.QueryParser){window.QueryParser={}}window.QueryParser.Autocompletionist=Autocompletionist})();(function(){var Log,Logger;Log=function(name,level,message){var self=this;self.level=level;self.message=message;self.name=name;self.timestamp=new Date;self.toString=function(){return self.name+" -- "+self.timestamp.toString()+" ["+self.level+"] "+self.message}};Logger=function(name,isDebugging){var self=this;self.isDebugging=isDebugging;self.logs=[];self.name=name;self.debug=function(message){self.log("debug",message)};self.error=function(message){self.log("error",message)};self.initialize=function(){self.writeToConsoleEnabled=self.isDebugging&&window.console&&window.console.log};self.log=function(level,message){var log=new Log(self.name,"debug",message);self.logs.push(log);if(self.writeToConsoleEnabled){window.console.log(log.toString())}return log};self.initialize()};if(!window.QueryParser){window.QueryParser={}}window.QueryParser.Logger=Logger})();(function(){var Query;Query=function(options){var self=this;self.hasOutputSelector=false;self.logger=new window.QueryParser.Logger("Query",options.debug);self.options=options;self.$output=null;self.queryPartDelimiters=options.queryPartDelimiters;self.querySegments=[];self.queryString="";self.initialize=function(){if(self.options.outputSelector){self.hasOutputSelector=true;self.$output=$(self.options.outputSelector);self.logger.debug("Using output: "+self.options.outputSelector)}};self.onQueryStringUpdated=function(){self.logger.debug("Query string: "+self.queryString);self.splitQueryStringIntoParts();if(self.hasOutputSelector){self.$output.html(self.toString())}};self.splitQueryStringIntoParts=function(){self.querySegments=[];var queryParts=self.queryString.split(self.queryPartDelimiters);for(var i=0,len=queryParts.length;i<len;i+=1){var queryPart=queryParts[i];var querySegment=new window.QueryParser.QuerySegment(queryPart);self.querySegments.push(querySegment)}};self.setQueryString=function(value){self.queryString=value;self.onQueryStringUpdated()};self.toString=function(){var output="";output+="Query String: "+self.queryString+self.options.newline;output+="Query Segments: "+self.options.newline;for(var i=0,len=self.querySegments.length;i<len;i+=1){output+=i+": "+self.querySegments[i].toString()+self.options.newline}return output};self.initialize()};if(!window.QueryParser){window.QueryParser={}}window.QueryParser.Query=Query})();(function(){var QueryParser;var options={debug:false,events:["blur","focus","keyup"],keys:[],newline:"<br/>",outputSelector:null,queryPartDelimiters:/\s(?:and|or)\s/i};QueryParser=function(selector,userOptions){var self=this;$.extend(options,userOptions);self.options=options;self.$selector=$(selector);self.logger=new window.QueryParser.Logger("QueryParser",self.options.debug);self.query=new window.QueryParser.Query(self.options);self.bindEvents=function(){var events=options.events.join(" ");self.logger.debug("Debug mode enabled: "+options.debug);self.logger.debug("Binding events: "+events);self.$selector.on(events,function(){self.parseQuery()})};self.initialize=function(){self.logger.debug("Creating new QueryParser instance.");self.bindEvents()};self.parseQuery=function(){var content=self.$selector.val();self.query.setQueryString(content)};self.initialize()};if(!window.QueryParser){window.QueryParser={}}window.QueryParser.QueryParser=QueryParser})();(function(){var QuerySegment;QuerySegment=function(queryPart){var self=this;self.comparators=/\s(=|<>|!=|>|>=|<|<=|in)\s/i;self.comparator=null;self.comparatorIndex=null;self.key=null;self.queryPart=queryPart;self.value=null;self.initialize=function(){var parts=self.queryPart.split(self.comparators);if(parts.length===3){self.key=parts[0].trim();self.comparator=parts[1].trim();self.value=parts[2].trim()}};self.toString=function(){return"Key: "+self.key+", Comparator: "+self.comparator+", Value: "+self.value};self.initialize()};if(!window.QueryParser){window.QueryParser={}}window.QueryParser.QuerySegment=QuerySegment})();